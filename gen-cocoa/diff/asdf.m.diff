diff --git a/gen-cocoa/orig/asdf.m b/gen-cocoa/asdf.m
index cd3be91..1101127 100644
--- a/gen-cocoa/orig/asdf.m
+++ b/gen-cocoa/asdf.m
@@ -14,6 +14,9 @@
 #import "TProcessor.h"
 #import "TObjective-C.h"
 #import "TBase.h"
+#import "TAsyncTransport.h"
+#import "TProtocolFactory.h"
+#import "TBaseClient.h"
 
 
 #import "asdf.h"
@@ -543,13 +546,6 @@
   return self;
 }
 
-- (void) dealloc
-{
-  [inProtocol release_stub];
-  [outProtocol release_stub];
-  [super dealloc_stub];
-}
-
 - (void) send_ping: (asdfAuthenticationEnvelope *) envelope
 {
   [outProtocol writeMessageBeginWithName: @"ping" type: TMessageType_CALL sequenceID: 0];
@@ -562,16 +558,12 @@
   [outProtocol writeFieldStop];
   [outProtocol writeStructEnd];
   [outProtocol writeMessageEnd];
-  [[outProtocol transport] flush];
 }
 
 - (int32_t) recv_ping
 {
-  int msgType = 0;
-  [inProtocol readMessageBeginReturningName: nil type: &msgType sequenceID: NULL];
-  if (msgType == TMessageType_EXCEPTION) {
-    TApplicationException * x = [TApplicationException read: inProtocol];
-    [inProtocol readMessageEnd];
+  TApplicationException * x = [self checkIncomingMessageException];
+  if (x != nil)  {
     @throw x;
   }
   asdfPing_result * result = [[[asdfPing_result alloc] init] autorelease_stub];
@@ -587,6 +579,7 @@
 - (int32_t) ping: (asdfAuthenticationEnvelope *) envelope
 {
   [self send_ping : envelope];
+  [[outProtocol transport] flush];
   return [self recv_ping];
 }
 
@@ -677,6 +670,66 @@
 
 @end
 
+@implementation asdfAuthenticatedServiceClientAsync
+
+- (id) initWithProtocolFactory: (id <TProtocolFactory>) factory transport: (id <TAsyncTransport>) transport;
+{
+self = [super init];
+inProtocol = [[factory newProtocolOnTransport:transport] retain_stub];
+outProtocol = inProtocol;
+asyncTransport = transport;
+return self;
+}
+
+- (void) send_ping: (asdfAuthenticationEnvelope *) envelope
+{
+[outProtocol writeMessageBeginWithName: @"ping" type: TMessageType_CALL sequenceID: 0];
+[outProtocol writeStructBeginWithName: @"ping_args"];
+if (envelope != nil){
+  [outProtocol writeFieldBeginWithName: @"envelope" type: TType_STRUCT fieldID: 1];
+  [envelope write: outProtocol];
+  [outProtocol writeFieldEnd];
+}
+[outProtocol writeFieldStop];
+[outProtocol writeStructEnd];
+[outProtocol writeMessageEnd];
+}
+
+- (int32_t) recv_ping
+{
+TApplicationException * x = [self checkIncomingMessageException];
+if (x != nil){
+  @throw x;
+}
+asdfPing_result * result = [[[asdfPing_result alloc] init] autorelease_stub];
+[result read: inProtocol];
+[inProtocol readMessageEnd];
+if ([result successIsSet]) {
+  return [result success];
+}
+@throw [TApplicationException exceptionWithType: TApplicationException_MISSING_RESULT
+                                         reason: @"ping failed: unknown result"];
+}
+
+- (void) ping: (asdfAuthenticationEnvelope *) envelope response: (void (^)(int32_t)) responseBlock failure : (TAsyncFailureBlock) failureBlock
+{
+@try {
+  [self send_ping : envelope];
+} @catch(TException * texception) {
+  failureBlock(texception);
+  return;
+}
+[asyncTransport flush:^{
+  @try {
+    responseBlock([self recv_ping]);
+  } @catch(TException * texception) {
+    failureBlock(texception);
+  }
+} failure:failureBlock];
+}
+
+@end
+
 @interface asdfping11_args : NSObject <TBase, NSCoding> {
 asdfAuthenticationEnvelope * __envelope;
 
@@ -1391,13 +1444,6 @@ outProtocol = [anOutProtocol retain_stub];
 return self;
 }
 
-- (void) dealloc
-{
-[inProtocol release_stub];
-[outProtocol release_stub];
-[super dealloc_stub];
-}
-
 - (void) send_ping11: (asdfAuthenticationEnvelope *) envelope
 {
 [outProtocol writeMessageBeginWithName: @"ping11" type: TMessageType_CALL sequenceID: 0];
@@ -1410,16 +1456,12 @@ if (envelope != nil){
 [outProtocol writeFieldStop];
 [outProtocol writeStructEnd];
 [outProtocol writeMessageEnd];
-[[outProtocol transport] flush];
 }
 
 - (int32_t) recv_ping11
 {
-int msgType = 0;
-[inProtocol readMessageBeginReturningName: nil type: &msgType sequenceID: NULL];
-if (msgType == TMessageType_EXCEPTION) {
-  TApplicationException * x = [TApplicationException read: inProtocol];
-  [inProtocol readMessageEnd];
+TApplicationException * x = [self checkIncomingMessageException];
+if (x != nil){
   @throw x;
 }
 asdfPing11_result * result = [[[asdfPing11_result alloc] init] autorelease_stub];
@@ -1435,6 +1477,7 @@ if ([result successIsSet]) {
 - (int32_t) ping11: (asdfAuthenticationEnvelope *) envelope
 {
 [self send_ping11 : envelope];
+[[outProtocol transport] flush];
 return [self recv_ping11];
 }
 
@@ -1450,16 +1493,12 @@ if (envelope != nil){
 [outProtocol writeFieldStop];
 [outProtocol writeStructEnd];
 [outProtocol writeMessageEnd];
-[[outProtocol transport] flush];
 }
 
 - (int32_t) recv_ping12
 {
-int msgType = 0;
-[inProtocol readMessageBeginReturningName: nil type: &msgType sequenceID: NULL];
-if (msgType == TMessageType_EXCEPTION) {
-  TApplicationException * x = [TApplicationException read: inProtocol];
-  [inProtocol readMessageEnd];
+TApplicationException * x = [self checkIncomingMessageException];
+if (x != nil){
   @throw x;
 }
 asdfPing12_result * result = [[[asdfPing12_result alloc] init] autorelease_stub];
@@ -1475,6 +1514,7 @@ if ([result successIsSet]) {
 - (int32_t) ping12: (asdfAuthenticationEnvelope *) envelope
 {
 [self send_ping12 : envelope];
+[[outProtocol transport] flush];
 return [self recv_ping12];
 }
 
@@ -1590,6 +1630,113 @@ asdfPing12_result * result = [[asdfPing12_result alloc] init];
 
 @end
 
+@implementation asdfAuthenticatedService1ClientAsync
+
+- (id) initWithProtocolFactory: (id <TProtocolFactory>) factory transport: (id <TAsyncTransport>) transport;
+{
+self = [super init];
+inProtocol = [[factory newProtocolOnTransport:transport] retain_stub];
+outProtocol = inProtocol;
+asyncTransport = transport;
+return self;
+}
+
+- (void) send_ping11: (asdfAuthenticationEnvelope *) envelope
+{
+[outProtocol writeMessageBeginWithName: @"ping11" type: TMessageType_CALL sequenceID: 0];
+[outProtocol writeStructBeginWithName: @"ping11_args"];
+if (envelope != nil){
+[outProtocol writeFieldBeginWithName: @"envelope" type: TType_STRUCT fieldID: 1];
+[envelope write: outProtocol];
+[outProtocol writeFieldEnd];
+}
+[outProtocol writeFieldStop];
+[outProtocol writeStructEnd];
+[outProtocol writeMessageEnd];
+}
+
+- (int32_t) recv_ping11
+{
+TApplicationException * x = [self checkIncomingMessageException];
+if (x != nil){
+@throw x;
+}
+asdfPing11_result * result = [[[asdfPing11_result alloc] init] autorelease_stub];
+[result read: inProtocol];
+[inProtocol readMessageEnd];
+if ([result successIsSet]) {
+  return [result success];
+}
+@throw [TApplicationException exceptionWithType: TApplicationException_MISSING_RESULT
+                                         reason: @"ping11 failed: unknown result"];
+}
+
+- (void) ping11: (asdfAuthenticationEnvelope *) envelope response: (void (^)(int32_t)) responseBlock failure : (TAsyncFailureBlock) failureBlock
+{
+@try {
+[self send_ping11 : envelope];
+} @catch(TException * texception) {
+failureBlock(texception);
+return;
+}
+[asyncTransport flush:^{
+@try {
+  responseBlock([self recv_ping11]);
+} @catch(TException * texception) {
+  failureBlock(texception);
+}
+} failure:failureBlock];
+}
+
+- (void) send_ping12: (asdfAuthenticationEnvelope *) envelope
+{
+[outProtocol writeMessageBeginWithName: @"ping12" type: TMessageType_CALL sequenceID: 0];
+[outProtocol writeStructBeginWithName: @"ping12_args"];
+if (envelope != nil){
+[outProtocol writeFieldBeginWithName: @"envelope" type: TType_STRUCT fieldID: 1];
+[envelope write: outProtocol];
+[outProtocol writeFieldEnd];
+}
+[outProtocol writeFieldStop];
+[outProtocol writeStructEnd];
+[outProtocol writeMessageEnd];
+}
+
+- (int32_t) recv_ping12
+{
+TApplicationException * x = [self checkIncomingMessageException];
+if (x != nil){
+@throw x;
+}
+asdfPing12_result * result = [[[asdfPing12_result alloc] init] autorelease_stub];
+[result read: inProtocol];
+[inProtocol readMessageEnd];
+if ([result successIsSet]) {
+  return [result success];
+}
+@throw [TApplicationException exceptionWithType: TApplicationException_MISSING_RESULT
+                                         reason: @"ping12 failed: unknown result"];
+}
+
+- (void) ping12: (asdfAuthenticationEnvelope *) envelope response: (void (^)(int32_t)) responseBlock failure : (TAsyncFailureBlock) failureBlock
+{
+@try {
+[self send_ping12 : envelope];
+} @catch(TException * texception) {
+failureBlock(texception);
+return;
+}
+[asyncTransport flush:^{
+@try {
+  responseBlock([self recv_ping12]);
+} @catch(TException * texception) {
+  failureBlock(texception);
+}
+} failure:failureBlock];
+}
+
+@end
+
 @interface asdfping21_args : NSObject <TBase, NSCoding> {
 asdfAuthenticationEnvelope * __envelope;
 
@@ -2304,13 +2451,6 @@ outProtocol = [anOutProtocol retain_stub];
 return self;
 }
 
-- (void) dealloc
-{
-[inProtocol release_stub];
-[outProtocol release_stub];
-[super dealloc_stub];
-}
-
 - (void) send_ping21: (asdfAuthenticationEnvelope *) envelope
 {
 [outProtocol writeMessageBeginWithName: @"ping21" type: TMessageType_CALL sequenceID: 0];
@@ -2323,17 +2463,13 @@ if (envelope != nil){
 [outProtocol writeFieldStop];
 [outProtocol writeStructEnd];
 [outProtocol writeMessageEnd];
-[[outProtocol transport] flush];
 }
 
 - (int32_t) recv_ping21
 {
-int msgType = 0;
-[inProtocol readMessageBeginReturningName: nil type: &msgType sequenceID: NULL];
-if (msgType == TMessageType_EXCEPTION) {
-  TApplicationException * x = [TApplicationException read: inProtocol];
-  [inProtocol readMessageEnd];
-  @throw x;
+TApplicationException * x = [self checkIncomingMessageException];
+if (x != nil){
+@throw x;
 }
 asdfPing21_result * result = [[[asdfPing21_result alloc] init] autorelease_stub];
 [result read: inProtocol];
@@ -2348,6 +2484,7 @@ if ([result successIsSet]) {
 - (int32_t) ping21: (asdfAuthenticationEnvelope *) envelope
 {
 [self send_ping21 : envelope];
+[[outProtocol transport] flush];
 return [self recv_ping21];
 }
 
@@ -2363,17 +2500,13 @@ if (envelope != nil){
 [outProtocol writeFieldStop];
 [outProtocol writeStructEnd];
 [outProtocol writeMessageEnd];
-[[outProtocol transport] flush];
 }
 
 - (int32_t) recv_ping22
 {
-int msgType = 0;
-[inProtocol readMessageBeginReturningName: nil type: &msgType sequenceID: NULL];
-if (msgType == TMessageType_EXCEPTION) {
-  TApplicationException * x = [TApplicationException read: inProtocol];
-  [inProtocol readMessageEnd];
-  @throw x;
+TApplicationException * x = [self checkIncomingMessageException];
+if (x != nil){
+@throw x;
 }
 asdfPing22_result * result = [[[asdfPing22_result alloc] init] autorelease_stub];
 [result read: inProtocol];
@@ -2388,6 +2521,7 @@ if ([result successIsSet]) {
 - (int32_t) ping22: (asdfAuthenticationEnvelope *) envelope
 {
 [self send_ping22 : envelope];
+[[outProtocol transport] flush];
 return [self recv_ping22];
 }
 
@@ -2503,6 +2637,113 @@ asdfPing22_result * result = [[asdfPing22_result alloc] init];
 
 @end
 
+@implementation asdfAuthenticatedService2ClientAsync
+
+- (id) initWithProtocolFactory: (id <TProtocolFactory>) factory transport: (id <TAsyncTransport>) transport;
+{
+self = [super init];
+inProtocol = [[factory newProtocolOnTransport:transport] retain_stub];
+outProtocol = inProtocol;
+asyncTransport = transport;
+return self;
+}
+
+- (void) send_ping21: (asdfAuthenticationEnvelope *) envelope
+{
+[outProtocol writeMessageBeginWithName: @"ping21" type: TMessageType_CALL sequenceID: 0];
+[outProtocol writeStructBeginWithName: @"ping21_args"];
+if (envelope != nil){
+[outProtocol writeFieldBeginWithName: @"envelope" type: TType_STRUCT fieldID: 1];
+[envelope write: outProtocol];
+[outProtocol writeFieldEnd];
+}
+[outProtocol writeFieldStop];
+[outProtocol writeStructEnd];
+[outProtocol writeMessageEnd];
+}
+
+- (int32_t) recv_ping21
+{
+TApplicationException * x = [self checkIncomingMessageException];
+if (x != nil){
+@throw x;
+}
+asdfPing21_result * result = [[[asdfPing21_result alloc] init] autorelease_stub];
+[result read: inProtocol];
+[inProtocol readMessageEnd];
+if ([result successIsSet]) {
+  return [result success];
+}
+@throw [TApplicationException exceptionWithType: TApplicationException_MISSING_RESULT
+                                         reason: @"ping21 failed: unknown result"];
+}
+
+- (void) ping21: (asdfAuthenticationEnvelope *) envelope response: (void (^)(int32_t)) responseBlock failure : (TAsyncFailureBlock) failureBlock
+{
+@try {
+[self send_ping21 : envelope];
+} @catch(TException * texception) {
+failureBlock(texception);
+return;
+}
+[asyncTransport flush:^{
+@try {
+responseBlock([self recv_ping21]);
+} @catch(TException * texception) {
+failureBlock(texception);
+}
+} failure:failureBlock];
+}
+
+- (void) send_ping22: (asdfAuthenticationEnvelope *) envelope
+{
+[outProtocol writeMessageBeginWithName: @"ping22" type: TMessageType_CALL sequenceID: 0];
+[outProtocol writeStructBeginWithName: @"ping22_args"];
+if (envelope != nil){
+[outProtocol writeFieldBeginWithName: @"envelope" type: TType_STRUCT fieldID: 1];
+[envelope write: outProtocol];
+[outProtocol writeFieldEnd];
+}
+[outProtocol writeFieldStop];
+[outProtocol writeStructEnd];
+[outProtocol writeMessageEnd];
+}
+
+- (int32_t) recv_ping22
+{
+TApplicationException * x = [self checkIncomingMessageException];
+if (x != nil){
+@throw x;
+}
+asdfPing22_result * result = [[[asdfPing22_result alloc] init] autorelease_stub];
+[result read: inProtocol];
+[inProtocol readMessageEnd];
+if ([result successIsSet]) {
+  return [result success];
+}
+@throw [TApplicationException exceptionWithType: TApplicationException_MISSING_RESULT
+                                         reason: @"ping22 failed: unknown result"];
+}
+
+- (void) ping22: (asdfAuthenticationEnvelope *) envelope response: (void (^)(int32_t)) responseBlock failure : (TAsyncFailureBlock) failureBlock
+{
+@try {
+[self send_ping22 : envelope];
+} @catch(TException * texception) {
+failureBlock(texception);
+return;
+}
+[asyncTransport flush:^{
+@try {
+responseBlock([self recv_ping22]);
+} @catch(TException * texception) {
+failureBlock(texception);
+}
+} failure:failureBlock];
+}
+
+@end
+
 @interface asdfping31_args : NSObject <TBase, NSCoding> {
 asdfAuthenticationEnvelope * __envelope;
 
@@ -3217,13 +3458,6 @@ outProtocol = [anOutProtocol retain_stub];
 return self;
 }
 
-- (void) dealloc
-{
-[inProtocol release_stub];
-[outProtocol release_stub];
-[super dealloc_stub];
-}
-
 - (void) send_ping31: (asdfAuthenticationEnvelope *) envelope
 {
 [outProtocol writeMessageBeginWithName: @"ping31" type: TMessageType_CALL sequenceID: 0];
@@ -3236,17 +3470,13 @@ if (envelope != nil){
 [outProtocol writeFieldStop];
 [outProtocol writeStructEnd];
 [outProtocol writeMessageEnd];
-[[outProtocol transport] flush];
 }
 
 - (int32_t) recv_ping31
 {
-int msgType = 0;
-[inProtocol readMessageBeginReturningName: nil type: &msgType sequenceID: NULL];
-if (msgType == TMessageType_EXCEPTION) {
-  TApplicationException * x = [TApplicationException read: inProtocol];
-  [inProtocol readMessageEnd];
-  @throw x;
+TApplicationException * x = [self checkIncomingMessageException];
+if (x != nil){
+@throw x;
 }
 asdfPing31_result * result = [[[asdfPing31_result alloc] init] autorelease_stub];
 [result read: inProtocol];
@@ -3261,6 +3491,7 @@ if ([result successIsSet]) {
 - (int32_t) ping31: (asdfAuthenticationEnvelope *) envelope
 {
 [self send_ping31 : envelope];
+[[outProtocol transport] flush];
 return [self recv_ping31];
 }
 
@@ -3276,17 +3507,13 @@ if (envelope != nil){
 [outProtocol writeFieldStop];
 [outProtocol writeStructEnd];
 [outProtocol writeMessageEnd];
-[[outProtocol transport] flush];
 }
 
 - (int32_t) recv_ping32
 {
-int msgType = 0;
-[inProtocol readMessageBeginReturningName: nil type: &msgType sequenceID: NULL];
-if (msgType == TMessageType_EXCEPTION) {
-  TApplicationException * x = [TApplicationException read: inProtocol];
-  [inProtocol readMessageEnd];
-  @throw x;
+TApplicationException * x = [self checkIncomingMessageException];
+if (x != nil){
+@throw x;
 }
 asdfPing32_result * result = [[[asdfPing32_result alloc] init] autorelease_stub];
 [result read: inProtocol];
@@ -3301,6 +3528,7 @@ if ([result successIsSet]) {
 - (int32_t) ping32: (asdfAuthenticationEnvelope *) envelope
 {
 [self send_ping32 : envelope];
+[[outProtocol transport] flush];
 return [self recv_ping32];
 }
 
@@ -3416,6 +3644,113 @@ asdfPing32_result * result = [[asdfPing32_result alloc] init];
 
 @end
 
+@implementation asdfAuthenticatedService3ClientAsync
+
+- (id) initWithProtocolFactory: (id <TProtocolFactory>) factory transport: (id <TAsyncTransport>) transport;
+{
+self = [super init];
+inProtocol = [[factory newProtocolOnTransport:transport] retain_stub];
+outProtocol = inProtocol;
+asyncTransport = transport;
+return self;
+}
+
+- (void) send_ping31: (asdfAuthenticationEnvelope *) envelope
+{
+[outProtocol writeMessageBeginWithName: @"ping31" type: TMessageType_CALL sequenceID: 0];
+[outProtocol writeStructBeginWithName: @"ping31_args"];
+if (envelope != nil){
+[outProtocol writeFieldBeginWithName: @"envelope" type: TType_STRUCT fieldID: 1];
+[envelope write: outProtocol];
+[outProtocol writeFieldEnd];
+}
+[outProtocol writeFieldStop];
+[outProtocol writeStructEnd];
+[outProtocol writeMessageEnd];
+}
+
+- (int32_t) recv_ping31
+{
+TApplicationException * x = [self checkIncomingMessageException];
+if (x != nil){
+@throw x;
+}
+asdfPing31_result * result = [[[asdfPing31_result alloc] init] autorelease_stub];
+[result read: inProtocol];
+[inProtocol readMessageEnd];
+if ([result successIsSet]) {
+  return [result success];
+}
+@throw [TApplicationException exceptionWithType: TApplicationException_MISSING_RESULT
+                                         reason: @"ping31 failed: unknown result"];
+}
+
+- (void) ping31: (asdfAuthenticationEnvelope *) envelope response: (void (^)(int32_t)) responseBlock failure : (TAsyncFailureBlock) failureBlock
+{
+@try {
+[self send_ping31 : envelope];
+} @catch(TException * texception) {
+failureBlock(texception);
+return;
+}
+[asyncTransport flush:^{
+@try {
+responseBlock([self recv_ping31]);
+} @catch(TException * texception) {
+failureBlock(texception);
+}
+} failure:failureBlock];
+}
+
+- (void) send_ping32: (asdfAuthenticationEnvelope *) envelope
+{
+[outProtocol writeMessageBeginWithName: @"ping32" type: TMessageType_CALL sequenceID: 0];
+[outProtocol writeStructBeginWithName: @"ping32_args"];
+if (envelope != nil){
+[outProtocol writeFieldBeginWithName: @"envelope" type: TType_STRUCT fieldID: 1];
+[envelope write: outProtocol];
+[outProtocol writeFieldEnd];
+}
+[outProtocol writeFieldStop];
+[outProtocol writeStructEnd];
+[outProtocol writeMessageEnd];
+}
+
+- (int32_t) recv_ping32
+{
+TApplicationException * x = [self checkIncomingMessageException];
+if (x != nil){
+@throw x;
+}
+asdfPing32_result * result = [[[asdfPing32_result alloc] init] autorelease_stub];
+[result read: inProtocol];
+[inProtocol readMessageEnd];
+if ([result successIsSet]) {
+  return [result success];
+}
+@throw [TApplicationException exceptionWithType: TApplicationException_MISSING_RESULT
+                                         reason: @"ping32 failed: unknown result"];
+}
+
+- (void) ping32: (asdfAuthenticationEnvelope *) envelope response: (void (^)(int32_t)) responseBlock failure : (TAsyncFailureBlock) failureBlock
+{
+@try {
+[self send_ping32 : envelope];
+} @catch(TException * texception) {
+failureBlock(texception);
+return;
+}
+[asyncTransport flush:^{
+@try {
+responseBlock([self recv_ping32]);
+} @catch(TException * texception) {
+failureBlock(texception);
+}
+} failure:failureBlock];
+}
+
+@end
+
 @interface asdfping41_args : NSObject <TBase, NSCoding> {
 asdfAuthenticationEnvelope * __envelope;
 
@@ -4130,13 +4465,6 @@ outProtocol = [anOutProtocol retain_stub];
 return self;
 }
 
-- (void) dealloc
-{
-[inProtocol release_stub];
-[outProtocol release_stub];
-[super dealloc_stub];
-}
-
 - (void) send_ping41: (asdfAuthenticationEnvelope *) envelope
 {
 [outProtocol writeMessageBeginWithName: @"ping41" type: TMessageType_CALL sequenceID: 0];
@@ -4149,17 +4477,13 @@ if (envelope != nil){
 [outProtocol writeFieldStop];
 [outProtocol writeStructEnd];
 [outProtocol writeMessageEnd];
-[[outProtocol transport] flush];
 }
 
 - (int32_t) recv_ping41
 {
-int msgType = 0;
-[inProtocol readMessageBeginReturningName: nil type: &msgType sequenceID: NULL];
-if (msgType == TMessageType_EXCEPTION) {
-  TApplicationException * x = [TApplicationException read: inProtocol];
-  [inProtocol readMessageEnd];
-  @throw x;
+TApplicationException * x = [self checkIncomingMessageException];
+if (x != nil){
+@throw x;
 }
 asdfPing41_result * result = [[[asdfPing41_result alloc] init] autorelease_stub];
 [result read: inProtocol];
@@ -4174,6 +4498,7 @@ if ([result successIsSet]) {
 - (int32_t) ping41: (asdfAuthenticationEnvelope *) envelope
 {
 [self send_ping41 : envelope];
+[[outProtocol transport] flush];
 return [self recv_ping41];
 }
 
@@ -4189,17 +4514,13 @@ if (envelope != nil){
 [outProtocol writeFieldStop];
 [outProtocol writeStructEnd];
 [outProtocol writeMessageEnd];
-[[outProtocol transport] flush];
 }
 
 - (int32_t) recv_ping42
 {
-int msgType = 0;
-[inProtocol readMessageBeginReturningName: nil type: &msgType sequenceID: NULL];
-if (msgType == TMessageType_EXCEPTION) {
-  TApplicationException * x = [TApplicationException read: inProtocol];
-  [inProtocol readMessageEnd];
-  @throw x;
+TApplicationException * x = [self checkIncomingMessageException];
+if (x != nil){
+@throw x;
 }
 asdfPing42_result * result = [[[asdfPing42_result alloc] init] autorelease_stub];
 [result read: inProtocol];
@@ -4214,6 +4535,7 @@ if ([result successIsSet]) {
 - (int32_t) ping42: (asdfAuthenticationEnvelope *) envelope
 {
 [self send_ping42 : envelope];
+[[outProtocol transport] flush];
 return [self recv_ping42];
 }
 
@@ -4329,3 +4651,110 @@ asdfPing42_result * result = [[asdfPing42_result alloc] init];
 
 @end
 
+@implementation asdfAuthenticatedService4ClientAsync
+
+- (id) initWithProtocolFactory: (id <TProtocolFactory>) factory transport: (id <TAsyncTransport>) transport;
+{
+self = [super init];
+inProtocol = [[factory newProtocolOnTransport:transport] retain_stub];
+outProtocol = inProtocol;
+asyncTransport = transport;
+return self;
+}
+
+- (void) send_ping41: (asdfAuthenticationEnvelope *) envelope
+{
+[outProtocol writeMessageBeginWithName: @"ping41" type: TMessageType_CALL sequenceID: 0];
+[outProtocol writeStructBeginWithName: @"ping41_args"];
+if (envelope != nil){
+[outProtocol writeFieldBeginWithName: @"envelope" type: TType_STRUCT fieldID: 1];
+[envelope write: outProtocol];
+[outProtocol writeFieldEnd];
+}
+[outProtocol writeFieldStop];
+[outProtocol writeStructEnd];
+[outProtocol writeMessageEnd];
+}
+
+- (int32_t) recv_ping41
+{
+TApplicationException * x = [self checkIncomingMessageException];
+if (x != nil){
+@throw x;
+}
+asdfPing41_result * result = [[[asdfPing41_result alloc] init] autorelease_stub];
+[result read: inProtocol];
+[inProtocol readMessageEnd];
+if ([result successIsSet]) {
+  return [result success];
+}
+@throw [TApplicationException exceptionWithType: TApplicationException_MISSING_RESULT
+                                         reason: @"ping41 failed: unknown result"];
+}
+
+- (void) ping41: (asdfAuthenticationEnvelope *) envelope response: (void (^)(int32_t)) responseBlock failure : (TAsyncFailureBlock) failureBlock
+{
+@try {
+[self send_ping41 : envelope];
+} @catch(TException * texception) {
+failureBlock(texception);
+return;
+}
+[asyncTransport flush:^{
+@try {
+responseBlock([self recv_ping41]);
+} @catch(TException * texception) {
+failureBlock(texception);
+}
+} failure:failureBlock];
+}
+
+- (void) send_ping42: (asdfAuthenticationEnvelope *) envelope
+{
+[outProtocol writeMessageBeginWithName: @"ping42" type: TMessageType_CALL sequenceID: 0];
+[outProtocol writeStructBeginWithName: @"ping42_args"];
+if (envelope != nil){
+[outProtocol writeFieldBeginWithName: @"envelope" type: TType_STRUCT fieldID: 1];
+[envelope write: outProtocol];
+[outProtocol writeFieldEnd];
+}
+[outProtocol writeFieldStop];
+[outProtocol writeStructEnd];
+[outProtocol writeMessageEnd];
+}
+
+- (int32_t) recv_ping42
+{
+TApplicationException * x = [self checkIncomingMessageException];
+if (x != nil){
+@throw x;
+}
+asdfPing42_result * result = [[[asdfPing42_result alloc] init] autorelease_stub];
+[result read: inProtocol];
+[inProtocol readMessageEnd];
+if ([result successIsSet]) {
+  return [result success];
+}
+@throw [TApplicationException exceptionWithType: TApplicationException_MISSING_RESULT
+                                         reason: @"ping42 failed: unknown result"];
+}
+
+- (void) ping42: (asdfAuthenticationEnvelope *) envelope response: (void (^)(int32_t)) responseBlock failure : (TAsyncFailureBlock) failureBlock
+{
+@try {
+[self send_ping42 : envelope];
+} @catch(TException * texception) {
+failureBlock(texception);
+return;
+}
+[asyncTransport flush:^{
+@try {
+responseBlock([self recv_ping42]);
+} @catch(TException * texception) {
+failureBlock(texception);
+}
+} failure:failureBlock];
+}
+
+@end
+
